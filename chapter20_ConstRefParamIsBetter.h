#pragma once

class chapter20_ConstRefParamIsBetter
{
    // note: 불필요한 생성자 소멸자를 막기위해 '값에 의한 전달'보다는 '상수 객체 참조자'에 의한 전달 방식을 하자
    // note: 참조자는 포인터로 구현된다! => 포인터는 레지스터에 확실히 들어가므로 빠름을 보장할 수 있다.
    // 파라미터의 생성자, 소멸자뿐만 아니라 멤버변수들과 부모 클래스의 생성자 소멸자들도 재귀적으로 호출되므로 극악임 !!
    // 복사 손실 문제가 없어짐 : 다형성이 적용된 경우에 부모 클래스의 생성자만 불려서 재기능을 하지 못하는 문제
    // 그렇다고 모두 const reference가 좋은건 아님 => 기본 제공 타입, STL iterator, functor 는 값에 의한 전달이 저비용
    // 외의 것들은 다 const reference로 쓰자
    // double은 레지스터에 들어가지만, class에 double 하나만 있더라도 이는 컴파일러에 따라 레지스터에 들어가지 않을 수 있다.
    // 참조자(참조자는 포인터로 구현됨)는 확실히 레지스터에 들어가는 것을 보장
};
